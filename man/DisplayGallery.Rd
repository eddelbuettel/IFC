% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DisplayGallery.R
\name{DisplayGallery}
\alias{DisplayGallery}
\title{Gallery Display}
\usage{
DisplayGallery(
  display,
  offsets,
  objects,
  objects_type = "img",
  layout,
  name = "DisplayGallery",
  caption = FALSE,
  pageLength = 10L,
  pdf_pageSize = "A2",
  pdf_pageOrientation = "landscape",
  pdf_image_dpi = 96,
  extract_max = 10,
  sampling = FALSE,
  display_progress = TRUE,
  mode = c("rgb", "gray")[1],
  ...
)
}
\arguments{
\item{display}{object of class IFC_display, rich information extracted by \code{\link{getDisplayInfo}}. This parameter can't be missing.}

\item{offsets}{object of class IFC_offsets. If missing, the default, offsets will be extracted from display$fileName.\cr
This param is not mandatory but it may allow to save time for repeated image export on same file.}

\item{objects}{integers, indices of objects to use.
This param is not mandatory, if missing, the default, all objects will be used.}

\item{objects_type}{objects_type of desired offsets. Either "img" or "msk". Default is "img".}

\item{layout}{a character vector of [acquired channels + 'composite' images] members to export. Default is missing to export everything.\cr
Note that members can be missing to be removed from final display.\cr
Note that members not found will be automatically removed and a warning will be thrown.}

\item{name}{id of the datatable container. Default is DisplayGallery.}

\item{caption}{wether to display caption name or not. Default is FALSE.}

\item{pageLength}{integer, number of objects to display per page. Default is 10.}

\item{pdf_pageSize}{string, page dimension when exporting to pdf. Default is "A2".}

\item{pdf_pageOrientation}{string, page orientation when exporting to pdf. Default is "landscape". Allowed are "landscape" or "portrait".}

\item{pdf_image_dpi}{integer, desired image resolution. Default is 96, for full resolution.}

\item{extract_max}{maximum number of objects to extract. Default is 10. Use +Inf to extract all.}

\item{sampling}{whether to sample objects or not. Default is FALSE.}

\item{display_progress}{whether to display a progress bar. Default is TRUE.}

\item{mode}{(\code{\link{objectExtract}} argument) color mode export. Either "rgb" or "gray". Default is "rgb".}

\item{...}{other arguments to be passed to \code{\link{objectExtract}} with the exception of 'ifd', 'export'(="base64"), 'mode' and 'bypass'(=TRUE).
If 'offsets' are not provided arguments can also be passed to \code{\link{getOffsets}}.}
}
\description{
Displays gallery of IFC objects
}
\details{
arguments of \code{\link{objectExtract}} will be deduced from \code{\link{DisplayGallery}} input arguments.\cr
Please note that PDF export link will be available if export_to wil not result in a "bmp".\cr
Please note that a warning may be sent if gallery to display contains large amount of data. This is due to use of datatable() from \pkg{DT}.\cr
Warning message:\cr
In instance$preRenderHook(instance) :\cr
It seems your data is too big for client-side DataTables. You may consider server-side processing: http://rstudio.github.io/DT/server.html
}
\examples{
if(requireNamespace("IFCdata", quietly = TRUE)) {
  ## use a cif file
  file_cif <- system.file("extdata", "example.cif", package = "IFCdata")
  cif <- ExtractFromXIF(fileName = file_cif)
  disp <- getDisplayInfo(fileName = file_cif, from = "analysis")
  ## randomly show at most 10 "img" objects from file
  DisplayGallery(display = disp, objects_type = "img", extract_max = 10,
                 sampling = TRUE, export_to = "example.png")
} else {
  message(sprintf('Please type `install.packages("IFCdata", repos = "\%s", type = "source")` \%s',
                  'https://gitdemont.github.io/IFCdata/',
                  'to install extra files required to run this example.'))
}
}
